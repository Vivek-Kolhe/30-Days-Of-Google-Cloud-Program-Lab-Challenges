# Task 1


source <(gsutil cat gs://cloud-training/gsp318/marking/setup_marking.sh)

gcloud source repos clone valkyrie-app

cd valkyrie-app

/* Dockerfile given in the challenge

FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]

*/

cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF

docker build -t valkyrie-app:v0.0.1 .

cd ~/marking
./step1.sh


# Task 2


cd valkyrie-app

docker run -p 8080:8080 valkyrie-app:v0.0.1 &

/* Check the web preview on port 80. */

cd ~/marking
./step2.sh


# Task 3


cd valkyrie-app

docker tag valkyrie-app:v0.0.1 gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1

docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1


# Task 4


cd k8s

gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d

nano deployment.yaml
/* Replace IMAGE_HERE with gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1 */
Press Ctrl + o, Enter, Ctrl + x.

cat deployment.yaml

kubectl create -f deployment.yaml

kubectl create -f service.yaml


# Task 5


kubectl scale deployment valkyrie-dev --replicas 3

cd ..

git merge origin/kurt-dev

docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.2 .

docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.2

kubectl edit deployment valkyrie-dev
Press "i".
/* Change image to gcr.io/YOUR_PROJECT_ID/valkyrie-app:v0.0.2 */
Press "Esc".
Enter ":wq".


# Task 6


docker ps
/* Note the docker id. */

docker kill <container_id>

/* Run commands given in the challenge. */

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &

printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo
/* Note the password. */

Web preview on port 80 and sign in into Jenkins.

gcloud source repon list
/* Note the repo url. */

>> In Jenkins:

Dashboard > Manage Jenkins > Manage Credentials > global > Add Credentials > Kind: Google Service Account from metadata > OK.

Dashboard > New Item > Name: valkyrie-app > Pipeline > OK.

> Advanced Project Options > Pipeline > Definition: Pipeline script from SCM > SCM: Git > Repo URL: Noted repo url. > Credentials: qwiklabs XXXXXXX > Save.

>> Back in Cloud Shell:
sed -i "s/green/orange/g" source/html.go

sed -i "s/YOUR_PROJECT/$GOOGLE_CLOUD_PROJECT/g" Jenkinsfile

git config --global user.email <qwiklabs generated email>

git config --global user.name <username found on top right corner in GCP>

git add .

git commit -m "build"

git push

>> In Jenkins:

Dashboard > valkyrie-app > Build Now.
