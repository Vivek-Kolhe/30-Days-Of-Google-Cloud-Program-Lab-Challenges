# Task 1


Navigation Menu > COMPUTE > Compute Engine > VM Instances > kraken-jumphost > SSH.

> In SSH terminal:
cd /work/dm

sed -i s/SET_REGION/us-east1/g prod-network.yaml

gcloud deployment-manager deployments create prod-network --config=prod-network.yaml

gcloud config set compute/zone us-east1-b

gcloud container clusters create kraken-prod --num-nodes 2 --network kraken-prod-vpc --subnetwork kraken-prod-subnet --zone us-east1-b

gcloud container clusters get-credentials kraken-prod

cd /work/k8s

for F in $(ls *.yaml); do kubectl create -f $F; done


# Task 2

> In SSH terminal:
gcloud config set compute/zone us-east1-b

gcloud compute instances create kraken-admin --network-interface="subnet=kraken-mgmt-subnet" --network-interface="subnet=kraken-prod-subnet"

Navigation Menu > OPERATIONS > Monitoring > Alerting > Create Policy.
> Add Condition.

/* Configurations.

Resource type: VM Instance.
Metric: CPU utilization.

Filter: instance_name.
Value: kraken-admin.

Condition: is above.
Threshold: 50
For: 1 minute.

*/
> Next.

/* Set up Who should be notified? */
> Next.

Enter "Alert Name".
> Save.


# Task 3


>> In CloudShell:
gcloud config set compute/zone us-east1-b

gcloud container clusters get-credentials spinnaker-tutorial

DECK_POD=$(kubectl get pods --namespace default -l "cluster=spin-deck" -o jsonpath="{.items[0].metadata.name}")

kubectl port-forward --namespace default $DECK_POD 8080:9000 >> /dev/null &

/* Web Preview */
> Applications > sample > Pipelines > Start Manual Execution.
When prompted, approve the deployment to production.

>> In CloudShell:
gcloud config set compute/zone us-east1-b

gcloud source repos clone sample-app

cd sample-app

touch a

git config --global user.email <qwiklabs generated email>

git config --global user.name <username found on top right corner in GCP>

git commit -a -m "change"

git tag v1.0.1

git push --tags
